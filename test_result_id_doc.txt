

## 5. Frontend Navigation Flow Muammosi

Frontend'da navigation flow muammosi ham bor. Keling, bu muammolarni hal qilish uchun qo'llanma yozamiz:

## üîß Backend API Muammolari Hal Qilindi

### ‚úÖ 1. Result Calculation API Muammosi Hal Qilindi

**Muammo:** `test_result_id=303` bilan so'rov yuborilganda 400 xato
**Hal qilindi:** `OverallTestResultView` endi `test_result_id` parametrini ham qabul qiladi

**Endi ishlaydi:**
```
GET /multilevel/test-result/calculate/?test_result_id=303
```

### ‚úÖ 2. Test Flow API Muammosi Hal Qilindi

**Muammo:** Writing test uchun `test_result_id` qaytarilmayapti
**Hal qilindi:** `TestRequestApiView` da writing test uchun maxsus response qo'shildi

**Endi writing test uchun:**
```
GET /multilevel/test/?test=writing&exam_id=2
```

**Response:**
```json
{
  "test_result_id": 303,
  "section": {...},
  "tests": [...],
  "message": "Writing test muvaffaqiyatli yuklandi. Test Result ID: 303"
}
```

## üö® Frontend Navigation Flow Muammolari

### 1. **examFlowIndex: 4 Muammosi**

**Muammo:** `examFlowIndex: 4` array uzunligi 4 ga teng, lekin index 4 ga chiqib ketgan
**Sababi:** Array index 0 dan boshlanadi, shuning uchun 4 ta element bo'lsa, index 0,1,2,3 bo'ladi

**Hal qilish:**
```javascript
// Xato
const examFlowIndex = 4; // Bu array uzunligi 4 bo'lsa, index 4 mavjud emas

// To'g'ri
const examFlowIndex = Math.min(examFlowIndex, examFlow.length - 1);
// yoki
if (examFlowIndex >= examFlow.length) {
    examFlowIndex = examFlow.length - 1;
}
```

### 2. **URL Noto'g'ri O'tish Muammosi**

**Muammo:** `/tests/multilevel/result` ga o'tish kerak emas, balki writing testga o'tishi kerak
**Sababi:** Navigation middleware speaking testdan writing testga qaytarayapti

**Hal qilish:**
```javascript
// Navigation middleware'da to'g'ri yo'nalish
const handleTestNavigation = (testType, examId) => {
    switch(testType) {
        case 'writing':
            // Writing test uchun to'g'ri URL
            router.push(`/tests/multilevel/writing?exam_id=${examId}`);
            break;
        case 'speaking':
            router.push(`/tests/multilevel/speaking?exam_id=${examId}`);
            break;
        // ... boshqa test turlari
    }
};
```

### 3. **Test Result ID Noto'g'ri Olinayotgan Muammosi**

**Muammo:** Frontend eski `test_result_id` bilan so'rov yuborayapti
**Hal qilish:**
```javascript
// Har safar yangi test boshlanganda yangi test_result_id olish
const startNewTest = async (testType, examId) => {
    try {
        const response = await fetch(`/api/multilevel/test/?test=${testType}&exam_id=${examId}`);
        const data = await response.json();
        
        if (data.test_result_id) {
            // Yangi test_result_id ni saqlash
            setCurrentTestResultId(data.test_result_id);
            // Test ma'lumotlarini saqlash
            setTestData(data);
        }
    } catch (error) {
        console.error('Test boshlashda xato:', error);
    }
};
```

## üìã To'liq Frontend Fix Qo'llanmasi

### 1. **Navigation Flow Fix**

```javascript
// components/TestNavigation.js
const TestNavigation = ({ examFlow, currentIndex }) => {
    const [examFlowIndex, setExamFlowIndex] = useState(0);
    
    // Index chegarasini tekshirish
    useEffect(() => {
        if (examFlowIndex >= examFlow.length) {
            setExamFlowIndex(examFlow.length - 1);
        }
    }, [examFlowIndex, examFlow.length]);
    
    const navigateToTest = (testType, examId) => {
        // To'g'ri URL ga o'tish
        const testUrls = {
            'listening': `/tests/multilevel/listening?exam_id=${examId}`,
            'reading': `/tests/multilevel/reading?exam_id=${examId}`,
            'writing': `/tests/multilevel/writing?exam_id=${examId}`,
            'speaking': `/tests/multilevel/speaking?exam_id=${examId}`
        };
        
        if (testUrls[testType]) {
            router.push(testUrls[testType]);
        }
    };
    
    return (
        <div className="test-navigation">
            {examFlow.map((test, index) => (
                <button
                    key={index}
                    onClick={() => navigateToTest(test.type, test.examId)}
                    className={index === examFlowIndex ? 'active' : ''}
                    disabled={index > examFlowIndex}
                >
                    {test.title}
                </button>
            ))}
        </div>
    );
};
```

### 2. **Test Result ID Management**

```javascript
// hooks/useTestResult.js
const useTestResult = () => {
    const [currentTestResultId, setCurrentTestResultId] = useState(null);
    const [testData, setTestData] = useState(null);
    
    const startNewTest = async (testType, examId) => {
        try {
            const response = await fetch(`/api/multilevel/test/?test=${testType}&exam_id=${examId}`);
            const data = await response.json();
            
            if (data.test_result_id) {
                setCurrentTestResultId(data.test_result_id);
                setTestData(data);
                return data;
            }
        } catch (error) {
            console.error('Test boshlashda xato:', error);
            throw error;
        }
    };
    
    const submitTestResult = async (testData) => {
        if (!currentTestResultId) {
            throw new Error('Test Result ID topilmadi');
        }
        
        // Test natijasini yuborish
        const response = await fetch('/api/multilevel/testcheck/writing/', {
            method: 'POST',
            headers: {
                'Authorization': `Bearer ${token}`,
            },
            body: testData
        });
        
        return response.json();
    };
    
    return {
        currentTestResultId,
        testData,
        startNewTest,
        submitTestResult
    };
};
```

### 3. **Error Handling**

```javascript
// utils/errorHandler.js
export const handleTestError = (error, testType) => {
    if (error.status === 400) {
        if (error.message.includes('vaqti tugagan')) {
            return 'Test vaqti tugagan, yangi test so\'rang';
        } else if (error.message.includes('TestResult topilmadi')) {
            return 'Test natijasi topilmadi, testni qayta boshlang';
        }
    } else if (error.status === 404) {
        return `${testType} test topilmadi`;
    }
    
    return 'Xatolik yuz berdi, qayta urinib ko\'ring';
};
```

## ÔøΩÔøΩ Test Qilish

### 1. **Result Calculation API Test:**
```bash
curl -X GET "http://localhost:8000/api/multilevel/test-result/calculate/?test_result_id=303" \
  -H "Authorization: Bearer YOUR_TOKEN"
```

### 2. **Writing Test API Test:**
```bash
curl -X GET "http://localhost:8000/api/multilevel/test/?test=writing&exam_id=2" \
  -H "Authorization: Bearer YOUR_TOKEN"
```

## üìù Natija

‚úÖ **Backend API muammolari hal qilindi:**
- Result Calculation API endi `test_result_id` bilan ishlaydi
- Writing test uchun maxsus response qo'shildi
- `test_result_id` to'g'ri qaytariladi

‚ö†Ô∏è **Frontend muammolari hal qilish kerak:**
- `examFlowIndex` chegarasini tekshirish
- Navigation URL'larni to'g'rilash
- `test_result_id` ni har safar yangilash

Endi backend API'lar to'g'ri ishlaydi va frontend'da navigation flow muammolarini hal qilish mumkin! üöÄ